---
import "./twitch.scss";
const { overrideDates = "false" } = Astro.props;
---
<div id="Twitch-badge" data-override-dates={ overrideDates }>
    <i class="fa-solid fa-video"></i>Streaming Now
</div>

<script>
    import { Twitch } from "./Twitch";
    import { EventWindow } from "^scripts/EventWindow";
    import CONFIG from "^config/config.json";

    let badge: HTMLDivElement;
    const checkLive = () => {
        if (badge) {
            const overrideDates = badge.dataset.overrideDates === 'true';
            if ((EventWindow.hasStarted && !EventWindow.hasEnded) || overrideDates) {
                Twitch.isCurrentlyStreaming(["kyfrieddice"]).then(
                    (isLive) => {
                        if (isLive) {
                            badge.classList.add("live");
                            badge.addEventListener('click', () => {
                                location.href = 'https://www.twitch.tv/kyfrieddice';
                            });
                        } else {
                            badge.classList.remove("live");
                        }
                    });
            } else {
                badge.classList.remove("live");
            }
        }
    };

    document.addEventListener("DOMContentLoaded", () => {
        badge = document.getElementById("Twitch-badge") as HTMLDivElement;

        try {
            checkLive();
            setInterval(checkLive, CONFIG.twitch.polling_frequency_sec * 1000);
        } catch (e) {
            console.error("Twitch indicator caught the following error.", e);
        }
    });
</script>
